{% extends 'default.html.twig' %}

{% block head_styles %}
    {{ parent() }}
    <link rel="stylesheet" href="/public/node_modules/leaflet/dist/leaflet.css">
    <link rel="stylesheet" href="/public/node_modules/leaflet.markercluster/dist/MarkerCluster.css">
    <link rel="stylesheet" href="/public/node_modules/leaflet.markercluster/dist/MarkerCluster.Default.css">
{% endblock %}

{% block main %}
    <p>{% trans 'Alt-katholische Kirchen werden orange, anglikanische grün, evangelische lila, freikirchliche blau, katholische gelb und andere/ökumenische rot dargestellt.' %}</p>
    <div id="map">
        <p>{% trans 'Bitte warten. Die Karte wird geladen.' %}</p>
    </div>
{% endblock %}

{% block footer_scripts %}
    <script src="/public/node_modules/jquery/dist/jquery.min.js"></script>
    <script src="/public/node_modules/leaflet/dist/leaflet.js"></script>
    <script src="/public/node_modules/leaflet.markercluster/dist/leaflet.markercluster.js"></script>
    <script type="text/javascript">
        var map;
        var markerArray = [];
        // the layers
        var allLayer = new L.LayerGroup;
        var oldCatholicLayer = new L.LayerGroup;
        var anglicanLayer = new L.LayerGroup;
        var protestantLayer = new L.LayerGroup;
        var freeChurchesLayer = new L.LayerGroup;
        var catholicLayer = new L.LayerGroup;
        var othersLayer = new L.LayerGroup;
        var webLayer = new L.LayerGroup;
        var blogLayer = new L.LayerGroup;
        var rssLayer = new L.LayerGroup;
        var facebookLayer = new L.LayerGroup;
        var flickrLayer = new L.LayerGroup;
        var googleLayer = new L.LayerGroup;
        var instagramLayer = new L.LayerGroup;
        var soundcloudLayer = new L.LayerGroup;
        var twitterLayer = new L.LayerGroup;
        var vimeoLayer = new L.LayerGroup;
        var youtubeLayer = new L.LayerGroup;
        // the icons
        var oldCatholicIcon = L.icon({iconUrl: '/images/markers/orange.png'});
        var anglicanIcon = L.icon({iconUrl: '/images/markers/green.png'});
        var protestantIcon = L.icon({iconUrl: '/images/markers/purple.png'});
        var freeChurchesIcon = L.icon({iconUrl: '/images/markers/blue.png'});
        var catholicIcon = L.icon({iconUrl: '/images/markers/yellow.png'});
        var othersIcon = L.icon({iconUrl: '/images/markers/red.png'});

        loadMap();

        function loadMap() {
            'use strict'; // Strict mode makes the browse mourn, if bad practise is used
            // create a map in the "map" div, set the view to a given place and zoom
            map = L.map('map', {center: L.latLng(50, 10), zoom: 6});
            // add an OpenStreetMap tile layer
            L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> (CC BY-SA)'
            }).addTo(map);
            getData();
        }

        function getData() {
            'use strict';
            var url = '/data/data.json';
            var markerCluster = L.markerClusterGroup({maxClusterRadius: 80, chunkedLoading: true});
            $.getJSON(url,
                function(data) {
                    var title, denomination, icon, denominationLayer, content, thisMarker;
                    $.each(data,
                        function(i, v) {
                            // read the JSON data
                            title = v.name;
                            denomination = v.denomination;
                            if (denomination === 'alt-katholisch') {
                                denominationLayer = oldCatholicLayer;
                                icon = oldCatholicIcon;
                            } else if (denomination === 'anglikanisch') {
                                denominationLayer = anglicanLayer;
                                icon = anglicanIcon;
                            } else if (denomination === 'evangelisch') {
                                denominationLayer = protestantLayer;
                                icon = protestantIcon;
                            } else if (denomination === 'freikirchlich') {
                                denominationLayer = freeChurchesLayer;
                                icon = freeChurchesIcon;
                            } else if (denomination === 'katholisch') {
                                denominationLayer = catholicLayer;
                                icon = catholicIcon;
                            } else {
                                denominationLayer = othersLayer;
                                icon = othersIcon;
                            }

                            if (v.lat && v.lon && title && icon) {
                                thisMarker = L.marker([v.lat, v.lon], {title: title, icon: icon});

                                // Push the marker to the Array which shall be displayed on the map
                                markerArray.push(thisMarker);
                                markerCluster.addLayer(thisMarker);

                                // add to the layers for the denominations
                                thisMarker.addTo(allLayer);
                                thisMarker.addTo(denominationLayer);

                                // Build the popup for the marker
                                content = '<strong><a href="/{{ languageSlug }}/details/' + v.id + '/">' + title + '</a></strong><br>' + v.street + ', ' + v.postalCode + ' ' + v.city + '<br><ul>';

                                // add to the layers for the social networks
                                if (v.web) {
                                    thisMarker.addTo(webLayer);
                                    content = content + '<li><a href="' + v.web + '">{{ config.websites['web'] }}</a></li>';
                                }
                                if (v.blog) {
                                    thisMarker.addTo(blogLayer);
                                    content = content + '<li><a href="' + v.blog + '">{{ config.websites['blog'] }}</a></li>';
                                }
                                if (v.rss) {
                                    thisMarker.addTo(rssLayer);
                                    content = content + '<li><a href="' + v.rss + '">RSS</a></li>';
                                }
                                if (v.facebook) {
                                    thisMarker.addTo(facebookLayer);
                                    content = content + '<li><a href="' + v.facebook + '">Facebook</a></li>';
                                }
                                if (v.flickr) {
                                    thisMarker.addTo(flickrLayer);
                                    content = content + '<li><a href="' + v.flickr + '">Flickr</a></li>';
                                }
                                if (v.googlePlus) {
                                    thisMarker.addTo(googleLayer);
                                    content = content + '<li><a href="' + v.googlePlus + '">Google+</a></li>';
                                }
                                if (v.instagram) {
                                    thisMarker.addTo(instagramLayer);
                                    content = content + '<li><a href="' + v.instagram + '">Instagram</a></li>';
                                }
                                if (v.soundcloud) {
                                    thisMarker.addTo(soundcloudLayer);
                                    content = content + '<li><a href="' + v.soundcloud + '">Soundcloud</a></li>';
                                }
                                if (v.twitter) {
                                    thisMarker.addTo(twitterLayer);
                                    content = content + '<li><a href="' + v.twitter + '">Twitter</a></li>';
                                }
                                if (v.vimeo) {
                                    thisMarker.addTo(vimeoLayer);
                                    content = content + '<li><a href="' + v.vimeo + '">Vimeo</a></li>';
                                }
                                if (v.youtube) {
                                    thisMarker.addTo(youtubeLayer);
                                    content = content + '<li><a href="' + v.youtube + '">YouTube</a></li>';
                                }

                                thisMarker.bindPopup(content + '</ul>');
                            } else {
                                console.error('Problem with entry ' + v.id + ' ' + title);
                            }
                        });
                    // add control for the layers
                    var layers = {
                        "{% trans 'alle' %}": allLayer,
                        "{% trans 'alt-katholisch' %}": oldCatholicLayer,
                        "{% trans 'anglikanisch' %}": anglicanLayer,
                        "{% trans 'evangelisch' %}": protestantLayer,
                        "{% trans 'freikirchlich' %}": freeChurchesLayer,
                        "{% trans 'katholisch' %}": catholicLayer,
                        "{% trans 'andere Konfession' %}": othersLayer,
                        "{{ config.websites['web'] }}": webLayer,
                        "{{ config.websites['blog'] }}": blogLayer,
                        "RSS": rssLayer,
                        "Facebook": facebookLayer,
                        "Flickr": flickrLayer,
                        "Google+": googleLayer,
                        "Instagram": instagramLayer,
                        "Soundcloud": soundcloudLayer,
                        "Twitter": twitterLayer,
                        "Vimeo": vimeoLayer,
                        "YouTube": youtubeLayer
                    };
                    L.control.layers(layers).addTo(map);

                    // Add cluster.
                    map.addLayer(markerCluster);
                })
        }
    </script>
{% endblock %}
